{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tarciorodrigues/Documents/workspace/rocketseat/ignite/ReactJS/ignite-aulas/reactjs/ignite-upfi/src/components/CardList.tsx\",\n    _s = $RefreshSig$();\n\nimport { SimpleGrid, useDisclosure } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { Card } from './Card';\nimport { ModalViewImage } from './Modal/ViewImage';\nexport function CardList(_ref) {\n  _s();\n\n  var _this = this;\n\n  var cards = _ref.cards;\n\n  var _useDisclosure = useDisclosure(),\n      onOpen = _useDisclosure.onOpen,\n      isOpen = _useDisclosure.isOpen,\n      onClose = _useDisclosure.onClose;\n\n  var _useState = useState(''),\n      currentImageUrl = _useState[0],\n      setCurrentImageUrl = _useState[1];\n\n  function handleViewImage(url) {\n    onOpen();\n    setCurrentImageUrl(url);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: [1, 2, 3],\n      spacing: \"40px\",\n      children: cards.map(function (card) {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          data: card,\n          viewImage: handleViewImage\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalViewImage, {\n      isOpen: isOpen,\n      imgUrl: currentImageUrl,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CardList, \"NP21yxKgeYVkQ4xRDUJ3Qc7jHZM=\", false, function () {\n  return [useDisclosure];\n});\n\n_c = CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["/Users/tarciorodrigues/Documents/workspace/rocketseat/ignite/ReactJS/ignite-aulas/reactjs/ignite-upfi/src/components/CardList.tsx"],"names":["SimpleGrid","useDisclosure","useState","Card","ModalViewImage","CardList","cards","onOpen","isOpen","onClose","currentImageUrl","setCurrentImageUrl","handleViewImage","url","map","card","id"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,aAArB,QAA0C,kBAA1C;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAcA,OAAO,SAASC,QAAT,OAAsD;AAAA;;AAAA;;AAAA,MAAlCC,KAAkC,QAAlCA,KAAkC;;AAAA,uBACvBL,aAAa,EADU;AAAA,MACnDM,MADmD,kBACnDA,MADmD;AAAA,MAC3CC,MAD2C,kBAC3CA,MAD2C;AAAA,MACnCC,OADmC,kBACnCA,OADmC;;AAAA,kBAGbP,QAAQ,CAAC,EAAD,CAHK;AAAA,MAGpDQ,eAHoD;AAAA,MAGnCC,kBAHmC;;AAK3D,WAASC,eAAT,CAAyBC,GAAzB,EAA4C;AAC1CN,IAAAA,MAAM;AACNI,IAAAA,kBAAkB,CAACE,GAAD,CAAlB;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAArB;AAAgC,MAAA,OAAO,EAAC,MAAxC;AAAA,gBACGP,KAAK,CAACQ,GAAN,CAAU,UAAAC,IAAI;AAAA,4BACb,QAAC,IAAD;AAAoB,UAAA,IAAI,EAAEA,IAA1B;AAAgC,UAAA,SAAS,EAAEH;AAA3C,WAAWG,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,iBADa;AAAA,OAAd;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,cAAD;AACE,MAAA,MAAM,EAAER,MADV;AAEE,MAAA,MAAM,EAAEE,eAFV;AAGE,MAAA,OAAO,EAAED;AAHX;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAeD;;GAzBeJ,Q;UACsBJ,a;;;KADtBI,Q","sourcesContent":["import { SimpleGrid, useDisclosure } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { Card } from './Card';\nimport { ModalViewImage } from './Modal/ViewImage';\n\ninterface Card {\n  title: string;\n  description: string;\n  url: string;\n  ts: number;\n  id: string;\n}\n\ninterface CardsProps {\n  cards: Card[];\n}\n\nexport function CardList({ cards }: CardsProps): JSX.Element {\n  const { onOpen, isOpen, onClose } = useDisclosure();\n\n  const [currentImageUrl, setCurrentImageUrl] = useState('');\n\n  function handleViewImage(url: string): void {\n    onOpen();\n    setCurrentImageUrl(url);\n  }\n\n  return (\n    <>\n      <SimpleGrid columns={[1, 2, 3]} spacing=\"40px\">\n        {cards.map(card => (\n          <Card key={card.id} data={card} viewImage={handleViewImage} />\n        ))}\n      </SimpleGrid>\n\n      <ModalViewImage\n        isOpen={isOpen}\n        imgUrl={currentImageUrl}\n        onClose={onClose}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}