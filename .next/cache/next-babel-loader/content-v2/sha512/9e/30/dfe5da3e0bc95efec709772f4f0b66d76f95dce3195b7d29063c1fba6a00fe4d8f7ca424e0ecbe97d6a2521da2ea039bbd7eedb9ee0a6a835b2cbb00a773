{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tarciorodrigues/Documents/workspace/rocketseat/ignite/ReactJS/ignite-aulas/reactjs/ignite-upfi/src/components/Input/FileInput.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Box, FormLabel, CircularProgress, CircularProgressLabel, Icon, Image, Text, FormControl, FormErrorMessage, Flex, useToast, Tooltip } from '@chakra-ui/react';\nimport axios from 'axios';\nimport { useState, forwardRef, useCallback, useEffect } from 'react';\nimport { FiAlertCircle, FiPlus } from 'react-icons/fi';\nimport { api } from '../../services/api';\n\nconst FileInputBase = (_ref, ref) => {\n  let {\n    name,\n    error = null,\n    setImageUrl,\n    localImageUrl,\n    setLocalImageUrl,\n    setError,\n    onChange,\n    trigger\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"name\", \"error\", \"setImageUrl\", \"localImageUrl\", \"setLocalImageUrl\", \"setError\", \"onChange\", \"trigger\"]);\n\n  const toast = useToast();\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0);\n  const {\n    0: isSending,\n    1: setIsSending\n  } = useState(false);\n  const {\n    0: cancelToken,\n    1: setCancelToken\n  } = useState({});\n  const handleImageUpload = useCallback(async event => {\n    var _event$target$files;\n\n    if (!((_event$target$files = event.target.files) !== null && _event$target$files !== void 0 && _event$target$files.length)) {\n      return;\n    }\n\n    setImageUrl('');\n    setLocalImageUrl('');\n    setError('image', null);\n    setIsSending(true);\n    await onChange(event);\n    trigger('image');\n    const formData = new FormData();\n    formData.append(event.target.name, event.target.files[0]);\n    formData.append('key', process.env.NEXT_PUBLIC_IMGBB_API_KEY);\n    const {\n      CancelToken\n    } = axios;\n    const source = CancelToken.source();\n    setCancelToken(source);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      },\n      onUploadProgress: e => {\n        setProgress(Math.round(e.loaded * 100 / e.total));\n      },\n      cancelToken: source.token\n    };\n\n    try {\n      const response = await api.post('https://api.imgbb.com/1/upload', formData, config);\n      setImageUrl(response.data.data.url);\n      setLocalImageUrl(URL.createObjectURL(event.target.files[0]));\n    } catch (err) {\n      if ((err === null || err === void 0 ? void 0 : err.message) === 'Cancelled image upload.') return;\n      toast({\n        title: 'Falha no envio',\n        description: 'Ocorreu um erro ao realizar o upload da sua imagem.',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    } finally {\n      setIsSending(false);\n      setProgress(0);\n    }\n  }, [onChange, setError, setImageUrl, setLocalImageUrl, trigger, toast]);\n  useEffect(() => {\n    if (error !== null && error !== void 0 && error.message && isSending && cancelToken !== null && cancelToken !== void 0 && cancelToken.cancel) {\n      cancelToken.cancel('Cancelled image upload.');\n      setCancelToken(null);\n    }\n  }, [cancelToken, error, isSending]);\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    isInvalid: !!error,\n    children: /*#__PURE__*/_jsxDEV(FormLabel, {\n      mx: \"auto\",\n      w: 40,\n      h: 40,\n      htmlFor: name,\n      cursor: isSending ? 'progress' : 'pointer',\n      opacity: isSending ? 0.5 : 1,\n      children: [localImageUrl && !isSending ? /*#__PURE__*/_jsxDEV(Image, {\n        w: \"full\",\n        h: \"full\",\n        src: localImageUrl,\n        alt: \"Uploaded photo\",\n        borderRadius: \"md\",\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Flex, {\n        w: \"full\",\n        h: \"full\",\n        flexDir: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderRadius: \"md\",\n        bgColor: \"pGray.800\",\n        color: \"pGray.200\",\n        borderWidth: (error === null || error === void 0 ? void 0 : error.message) && 2,\n        borderColor: (error === null || error === void 0 ? void 0 : error.message) && 'red.500',\n        children: isSending ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            trackColor: \"pGray.200\",\n            value: progress,\n            color: \"orange.500\",\n            children: /*#__PURE__*/_jsxDEV(CircularProgressLabel, {\n              children: [progress, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            as: \"span\",\n            pt: 2,\n            textAlign: \"center\",\n            children: \"Enviando...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n          pos: \"relative\",\n          h: \"full\",\n          children: [!!error && /*#__PURE__*/_jsxDEV(Tooltip, {\n            label: error.message,\n            bg: \"red.500\",\n            children: /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n              pos: \"absolute\",\n              right: 2,\n              top: 2,\n              mt: 0,\n              zIndex: \"tooltip\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                as: FiAlertCircle,\n                color: \"red.500\",\n                w: 4,\n                h: 4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            h: \"full\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            flexDir: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              as: FiPlus,\n              w: 14,\n              h: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              as: \"span\",\n              pt: 2,\n              textAlign: \"center\",\n              children: \"Adicione sua imagem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        \"data-testid\": name,\n        disabled: isSending,\n        id: name,\n        name: name,\n        onChange: handleImageUpload,\n        ref: ref,\n        type: \"file\",\n        style: {\n          display: 'none'\n        }\n      }, rest), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n\nexport const FileInput = /*#__PURE__*/forwardRef(FileInputBase);","map":{"version":3,"sources":["/Users/tarciorodrigues/Documents/workspace/rocketseat/ignite/ReactJS/ignite-aulas/reactjs/ignite-upfi/src/components/Input/FileInput.tsx"],"names":["Box","FormLabel","CircularProgress","CircularProgressLabel","Icon","Image","Text","FormControl","FormErrorMessage","Flex","useToast","Tooltip","axios","useState","forwardRef","useCallback","useEffect","FiAlertCircle","FiPlus","api","FileInputBase","ref","name","error","setImageUrl","localImageUrl","setLocalImageUrl","setError","onChange","trigger","rest","toast","progress","setProgress","isSending","setIsSending","cancelToken","setCancelToken","handleImageUpload","event","target","files","length","formData","FormData","append","process","env","NEXT_PUBLIC_IMGBB_API_KEY","CancelToken","source","config","headers","onUploadProgress","e","Math","round","loaded","total","token","response","post","data","url","URL","createObjectURL","err","message","title","description","status","duration","isClosable","cancel","display","FileInput"],"mappings":"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","sourcesContent":["import {\n  Box,\n  FormLabel,\n  CircularProgress,\n  CircularProgressLabel,\n  Icon,\n  Image,\n  Text,\n  FormControl,\n  FormErrorMessage,\n  Flex,\n  useToast,\n  Tooltip,\n} from '@chakra-ui/react';\nimport axios, { AxiosRequestConfig, CancelTokenSource } from 'axios';\nimport {\n  useState,\n  SetStateAction,\n  Dispatch,\n  ForwardRefRenderFunction,\n  forwardRef,\n  useCallback,\n  useEffect,\n} from 'react';\nimport {\n  FieldError,\n  FieldValues,\n  UseFormSetError,\n  UseFormTrigger,\n} from 'react-hook-form';\nimport { FiAlertCircle, FiPlus } from 'react-icons/fi';\nimport { api } from '../../services/api';\n\nexport interface FileInputProps {\n  name: string;\n  error?: FieldError;\n  setImageUrl: Dispatch<SetStateAction<string>>;\n  localImageUrl: string;\n  setLocalImageUrl: Dispatch<SetStateAction<string>>;\n  setError: UseFormSetError<FieldValues>;\n  onChange: (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => Promise<boolean | void>;\n  trigger: UseFormTrigger<FieldValues>;\n}\n\nconst FileInputBase: ForwardRefRenderFunction<\n  HTMLInputElement,\n  FileInputProps\n> = (\n  {\n    name,\n    error = null,\n    setImageUrl,\n    localImageUrl,\n    setLocalImageUrl,\n    setError,\n    onChange,\n    trigger,\n    ...rest\n  },\n  ref\n) => {\n  const toast = useToast();\n  const [progress, setProgress] = useState(0);\n  const [isSending, setIsSending] = useState(false);\n  const [cancelToken, setCancelToken] = useState<CancelTokenSource>(\n    {} as CancelTokenSource\n  );\n\n  const handleImageUpload = useCallback(\n    async (event: React.ChangeEvent<HTMLInputElement>): Promise<void> => {\n      if (!event.target.files?.length) {\n        return;\n      }\n\n      setImageUrl('');\n      setLocalImageUrl('');\n      setError('image', null);\n      setIsSending(true);\n\n      await onChange(event);\n      trigger('image');\n\n      const formData = new FormData();\n\n      formData.append(event.target.name, event.target.files[0]);\n      formData.append('key', process.env.NEXT_PUBLIC_IMGBB_API_KEY);\n\n      const { CancelToken } = axios;\n      const source = CancelToken.source();\n      setCancelToken(source);\n\n      const config = {\n        headers: { 'content-type': 'multipart/form-data' },\n        onUploadProgress: (e: ProgressEvent) => {\n          setProgress(Math.round((e.loaded * 100) / e.total));\n        },\n        cancelToken: source.token,\n      } as AxiosRequestConfig;\n\n      try {\n        const response = await api.post(\n          'https://api.imgbb.com/1/upload',\n          formData,\n          config\n        );\n\n        setImageUrl(response.data.data.url);\n        setLocalImageUrl(URL.createObjectURL(event.target.files[0]));\n      } catch (err) {\n        if (err?.message === 'Cancelled image upload.') return;\n\n        toast({\n          title: 'Falha no envio',\n          description: 'Ocorreu um erro ao realizar o upload da sua imagem.',\n          status: 'error',\n          duration: 5000,\n          isClosable: true,\n        });\n      } finally {\n        setIsSending(false);\n        setProgress(0);\n      }\n    },\n    [onChange, setError, setImageUrl, setLocalImageUrl, trigger, toast]\n  );\n\n  useEffect(() => {\n    if (error?.message && isSending && cancelToken?.cancel) {\n      cancelToken.cancel('Cancelled image upload.');\n      setCancelToken(null);\n    }\n  }, [cancelToken, error, isSending]);\n\n  return (\n    <FormControl isInvalid={!!error}>\n      <FormLabel\n        mx=\"auto\"\n        w={40}\n        h={40}\n        htmlFor={name}\n        cursor={isSending ? 'progress' : 'pointer'}\n        opacity={isSending ? 0.5 : 1}\n      >\n        {localImageUrl && !isSending ? (\n          <Image\n            w=\"full\"\n            h=\"full\"\n            src={localImageUrl}\n            alt=\"Uploaded photo\"\n            borderRadius=\"md\"\n            objectFit=\"cover\"\n          />\n        ) : (\n          <Flex\n            w=\"full\"\n            h=\"full\"\n            flexDir=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            borderRadius=\"md\"\n            bgColor=\"pGray.800\"\n            color=\"pGray.200\"\n            borderWidth={error?.message && 2}\n            borderColor={error?.message && 'red.500'}\n          >\n            {isSending ? (\n              <>\n                <CircularProgress\n                  trackColor=\"pGray.200\"\n                  value={progress}\n                  color=\"orange.500\"\n                >\n                  <CircularProgressLabel>{progress}%</CircularProgressLabel>\n                </CircularProgress>\n                <Text as=\"span\" pt={2} textAlign=\"center\">\n                  Enviando...\n                </Text>\n              </>\n            ) : (\n              <Box pos=\"relative\" h=\"full\">\n                {!!error && (\n                  <Tooltip label={error.message} bg=\"red.500\">\n                    <FormErrorMessage\n                      pos=\"absolute\"\n                      right={2}\n                      top={2}\n                      mt={0}\n                      zIndex=\"tooltip\"\n                    >\n                      <Icon as={FiAlertCircle} color=\"red.500\" w={4} h={4} />\n                    </FormErrorMessage>\n                  </Tooltip>\n                )}\n\n                <Flex\n                  h=\"full\"\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  flexDir=\"column\"\n                >\n                  <Icon as={FiPlus} w={14} h={14} />\n                  <Text as=\"span\" pt={2} textAlign=\"center\">\n                    Adicione sua imagem\n                  </Text>\n                </Flex>\n              </Box>\n            )}\n          </Flex>\n        )}\n        <input\n          data-testid={name}\n          disabled={isSending}\n          id={name}\n          name={name}\n          onChange={handleImageUpload}\n          ref={ref}\n          type=\"file\"\n          style={{\n            display: 'none',\n          }}\n          {...rest}\n        />\n      </FormLabel>\n    </FormControl>\n  );\n};\n\nexport const FileInput = forwardRef(FileInputBase);\n"]},"metadata":{},"sourceType":"module"}