{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tarciorodrigues/Documents/workspace/rocketseat/ignite/ReactJS/ignite-aulas/reactjs/ignite-upfi/src/components/Modal/ViewImage.tsx\";\nimport { Modal, ModalOverlay, ModalContent, ModalFooter, ModalBody, Image, Link } from '@chakra-ui/react';\nexport function ModalViewImage(_ref) {\n  var isOpen = _ref.isOpen,\n      onClose = _ref.onClose,\n      imgUrl = _ref.imgUrl;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    isCentered: true,\n    size: \"4xl\",\n    children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n      mx: \"auto\",\n      w: \"auto\",\n      h: \"auto\",\n      maxW: ['300px', '500px', '900px'],\n      maxH: ['350px', '450px', '600px'],\n      children: [/*#__PURE__*/_jsxDEV(ModalBody, {\n        p: \"0\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: imgUrl,\n          maxW: ['300px', '500px', '900px'],\n          maxH: ['350px', '450px', '600px']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        bg: \"pGray.800\",\n        h: \"2rem\",\n        py: \"20px\",\n        borderBottomRadius: \"5px\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: imgUrl,\n          isExternal: true,\n          fontSize: \"1rem\",\n          mr: \"auto\",\n          children: \"Abrir original\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = ModalViewImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalViewImage\");","map":{"version":3,"sources":["/Users/tarciorodrigues/Documents/workspace/rocketseat/ignite/ReactJS/ignite-aulas/reactjs/ignite-upfi/src/components/Modal/ViewImage.tsx"],"names":["Modal","ModalOverlay","ModalContent","ModalFooter","ModalBody","Image","Link","ModalViewImage","isOpen","onClose","imgUrl"],"mappings":";;AAAA,SACEA,KADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,KANF,EAOEC,IAPF,QAQO,kBARP;AAgBA,OAAO,SAASC,cAAT,OAI8B;AAAA,MAHnCC,MAGmC,QAHnCA,MAGmC;AAAA,MAFnCC,OAEmC,QAFnCA,OAEmC;AAAA,MADnCC,MACmC,QADnCA,MACmC;AACnC,sBACE,QAAC,KAAD;AAAO,IAAA,MAAM,EAAEF,MAAf;AAAuB,IAAA,OAAO,EAAEC,OAAhC;AAAyC,IAAA,UAAU,MAAnD;AAAoD,IAAA,IAAI,EAAC,KAAzD;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AACE,MAAA,EAAE,EAAC,MADL;AAEE,MAAA,CAAC,EAAC,MAFJ;AAGE,MAAA,CAAC,EAAC,MAHJ;AAIE,MAAA,IAAI,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAJR;AAKE,MAAA,IAAI,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CALR;AAAA,8BAOE,QAAC,SAAD;AAAW,QAAA,CAAC,EAAC,GAAb;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,GAAG,EAAEC,MADP;AAEE,UAAA,IAAI,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAFR;AAGE,UAAA,IAAI,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB;AAHR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAcE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,WAAhB;AAA4B,QAAA,CAAC,EAAC,MAA9B;AAAqC,QAAA,EAAE,EAAC,MAAxC;AAA+C,QAAA,kBAAkB,EAAC,KAAlE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA,MAAZ;AAAoB,UAAA,UAAU,MAA9B;AAA+B,UAAA,QAAQ,EAAC,MAAxC;AAA+C,UAAA,EAAE,EAAC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;KA9BeH,c","sourcesContent":["import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalFooter,\n  ModalBody,\n  Image,\n  Link,\n} from '@chakra-ui/react';\n\ninterface ModalViewImageProps {\n  isOpen: boolean;\n  onClose: () => void;\n  imgUrl: string;\n}\n\nexport function ModalViewImage({\n  isOpen,\n  onClose,\n  imgUrl,\n}: ModalViewImageProps): JSX.Element {\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered size=\"4xl\">\n      <ModalOverlay />\n      <ModalContent\n        mx=\"auto\"\n        w=\"auto\"\n        h=\"auto\"\n        maxW={['300px', '500px', '900px']}\n        maxH={['350px', '450px', '600px']}\n      >\n        <ModalBody p=\"0\">\n          <Image\n            src={imgUrl}\n            maxW={['300px', '500px', '900px']}\n            maxH={['350px', '450px', '600px']}\n          />\n        </ModalBody>\n        <ModalFooter bg=\"pGray.800\" h=\"2rem\" py=\"20px\" borderBottomRadius=\"5px\">\n          <Link href={imgUrl} isExternal fontSize=\"1rem\" mr=\"auto\">\n            Abrir original\n          </Link>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}