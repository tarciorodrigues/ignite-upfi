{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tarciorodrigues/Documents/workspace/rocketseat/ignite/ReactJS/ignite-aulas/reactjs/ignite-upfi/src/components/CardList.tsx\";\nimport { SimpleGrid, useDisclosure } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { Card } from './Card';\nimport { ModalViewImage } from './Modal/ViewImage';\nexport function CardList({\n  cards\n}) {\n  // TODO MODAL USEDISCLOSURE\n  const {\n    isOpen,\n    onClose,\n    onOpen\n  } = useDisclosure(); // TODO SELECTED IMAGE URL STATE\n\n  const {\n    0: selectedImageUrl,\n    1: setSelectedImageUrl\n  } = useState(''); // TODO FUNCTION HANDLE VIEW IMAGE\n\n  const handleViewImage = url => {\n    setSelectedImageUrl(url);\n    onOpen();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: 3,\n      spacing: 40,\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        data: card,\n        viewImage: handleViewImage\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(ModalViewImage, {\n      imgUrl: selectedImageUrl,\n      isOpen: isOpen,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/tarciorodrigues/Documents/workspace/rocketseat/ignite/ReactJS/ignite-aulas/reactjs/ignite-upfi/src/components/CardList.tsx"],"names":["SimpleGrid","useDisclosure","useState","Card","ModalViewImage","CardList","cards","isOpen","onClose","onOpen","selectedImageUrl","setSelectedImageUrl","handleViewImage","url","map","card","id"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,aAArB,QAA0C,kBAA1C;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAcA,OAAO,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAsD;AAC3D;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,MAA8BR,aAAa,EAAjD,CAF2D,CAI3D;;AACA,QAAM;AAAA,OAACS,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CT,QAAQ,CAAC,EAAD,CAAxD,CAL2D,CAO3D;;AACA,QAAMU,eAAe,GAAIC,GAAD,IAAuB;AAC7CF,IAAAA,mBAAmB,CAACE,GAAD,CAAnB;AACAJ,IAAAA,MAAM;AACP,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAE,CAArB;AAAwB,MAAA,OAAO,EAAE,EAAjC;AAAA,gBACGH,KAAK,CAACQ,GAAN,CAAUC,IAAI,iBACb,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA,IAA1B;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAWG,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,EAMGT,MAAM,iBACL,QAAC,cAAD;AACE,MAAA,MAAM,EAAEG,gBADV;AAEE,MAAA,MAAM,EAAEH,MAFV;AAGE,MAAA,OAAO,EAAEC;AAHX;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADF;AAgBD","sourcesContent":["import { SimpleGrid, useDisclosure } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { Card } from './Card';\nimport { ModalViewImage } from './Modal/ViewImage';\n\ninterface Card {\n  title: string;\n  description: string;\n  url: string;\n  ts: number;\n  id: string;\n}\n\ninterface CardsProps {\n  cards: Card[];\n}\n\nexport function CardList({ cards }: CardsProps): JSX.Element {\n  // TODO MODAL USEDISCLOSURE\n  const { isOpen, onClose, onOpen } = useDisclosure();\n\n  // TODO SELECTED IMAGE URL STATE\n  const [selectedImageUrl, setSelectedImageUrl] = useState('');\n\n  // TODO FUNCTION HANDLE VIEW IMAGE\n  const handleViewImage = (url: string): void => {\n    setSelectedImageUrl(url);\n    onOpen();\n  };\n\n  return (\n    <>\n      <SimpleGrid columns={3} spacing={40}>\n        {cards.map(card => (\n          <Card key={card.id} data={card} viewImage={handleViewImage} />\n        ))}\n      </SimpleGrid>\n      {isOpen && (\n        <ModalViewImage\n          imgUrl={selectedImageUrl}\n          isOpen={isOpen}\n          onClose={onClose}\n        />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}